  const handleLogin = async (credentials) => {
    setIsLoading(true);
    setError(null);
    try {
      const response = await fetch('https://flask-iptv.vercel.app/api/user/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(credentials),
      });
      const data = await response.json();
      if (data.success) {
        setIsAuthenticated(true);
        setCurrentUser(data.user);
        const connectionsResponse = await fetch('https://flask-iptv.vercel.app/api/iptv/connections');
        const connectionsData = await connectionsResponse.json();
        if (connectionsData.success && connectionsData.connections.length > 0) {
          const connection = connectionsData.connections[0];
          setConnectionData(connection);

          const dashboardResponse = await fetch(`https://flask-iptv.vercel.app/api/iptv/dashboard/${connection.id}`);
          const dashboardData = await dashboardResponse.json();

          if (dashboardData.success) {
            setDashboardData(dashboardData.dashboard);
            setScreenStack(['dashboard']);
          } else {
            setError(dashboardData.error || 'Failed to load dashboard data.');
          }
        } else {
          setError('No Xtream connection found for this user.');
        }
      } else {
        console.log('Login failed with data:', data);
        setError(data.error || 'Login failed');
      }
    } catch (err) {
      console.error('Caught an exception during login:', err);
      setError('An error occurred during login.');
    } finally {
      setIsLoading(false);
    }
  };